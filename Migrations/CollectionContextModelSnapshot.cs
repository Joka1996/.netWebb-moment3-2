// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using moment3_2.Data;

#nullable disable

namespace moment3_2.Migrations
{
    [DbContext(typeof(CollectionContext))]
    partial class CollectionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.2");

            modelBuilder.Entity("moment3_2.Models.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ArtistName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ArtistId");

                    b.ToTable("Artist");
                });

            modelBuilder.Entity("moment3_2.Models.Cd", b =>
                {
                    b.Property<int>("CdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Album_Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ArtistId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRented")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("TimeRented")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CdId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("UserId");

                    b.ToTable("Cd");
                });

            modelBuilder.Entity("moment3_2.Models.Rented", b =>
                {
                    b.Property<int>("RentedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CdId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRented")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TimeRented")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RentedId");

                    b.HasIndex("CdId");

                    b.HasIndex("UserId");

                    b.ToTable("Rented");
                });

            modelBuilder.Entity("moment3_2.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("moment3_2.Models.Cd", b =>
                {
                    b.HasOne("moment3_2.Models.Artist", "Artist")
                        .WithMany("Cds")
                        .HasForeignKey("ArtistId");

                    b.HasOne("moment3_2.Models.User", "User")
                        .WithMany("Cds")
                        .HasForeignKey("UserId");

                    b.Navigation("Artist");

                    b.Navigation("User");
                });

            modelBuilder.Entity("moment3_2.Models.Rented", b =>
                {
                    b.HasOne("moment3_2.Models.Cd", "Cd")
                        .WithMany()
                        .HasForeignKey("CdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("moment3_2.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cd");

                    b.Navigation("User");
                });

            modelBuilder.Entity("moment3_2.Models.Artist", b =>
                {
                    b.Navigation("Cds");
                });

            modelBuilder.Entity("moment3_2.Models.User", b =>
                {
                    b.Navigation("Cds");
                });
#pragma warning restore 612, 618
        }
    }
}
